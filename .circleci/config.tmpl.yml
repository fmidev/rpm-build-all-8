#timestamp This will be replaced with a date and time this file was regenerated
version: 2.1

executors:
 fmi-executor:
  docker:
   - image: fmidev/smartmet-cibase:latest

commands:
 build-default:
  description: Build and save artifacts for other steps
  steps:
   - run:
      name: Disable smartmet packages coming from FMI repo
      command: sudo sed -e 's/gpgcheck=0/gpgcheck=0\nexclude=smartmet-*/' -i /etc/yum.repos.d/smartmet-open.repo
   - checkout
   - attach_workspace:
      at: /dist
   - run:
      name: Create repository out of dependant RPMs
      command: |
        sudo mkdir -p /repo
        sudo ln -s /dist/*.rpm /repo/
        sudo createrepo_c /repo
        sudo touch /etc/yum.repos.d/localrepo.repo
        sudo chmod 666 /etc/yum.repos.d/localrepo.repo
        echo '[localrepo]' > /etc/yum.repos.d/localrepo.repo
        echo name="Local Repository" >> /etc/yum.repos.d/localrepo.repo
        echo gpgcheck=0 >> /etc/yum.repos.d/localrepo.repo
        echo enabled=1 >> /etc/yum.repos.d/localrepo.repo
        echo baseurl=file:///repo >> /etc/yum.repos.d/localrepo.repo
   - run:
      name: Checkout module for $CIRCLE_JOB
      command: ./getsource.sh
   - run:
      name: Install build dependencies
      command: |
        cd /tmp/build
        ci-build deps
   - run:
      name: Build RPM
      command: |
        cd /tmp/build
        ci-build rpm
   - persist_to_workspace:
      root: /dist
      paths: ./*
 test-default:
  description: Test
  steps:
   - run:
      name: Disable smartmet packages coming from FMI repo
      command: sudo sed -e 's/gpgcheck=0/gpgcheck=0\nexclude=smartmet-*/' -i /etc/yum.repos.d/smartmet-open.repo
   - checkout
   - attach_workspace:
      at: /dist
   - run:
      name: Create repository out of dependant RPMs
      command: |
        sudo mkdir -p /repo
        sudo ln -s /dist/*.rpm /repo/
        sudo createrepo_c /repo
        sudo touch /etc/yum.repos.d/localrepo.repo
        sudo chmod 666 /etc/yum.repos.d/localrepo.repo
        echo '[localrepo]' > /etc/yum.repos.d/localrepo.repo
        echo name="Local Repository" >> /etc/yum.repos.d/localrepo.repo
        echo gpgcheck=0 >> /etc/yum.repos.d/localrepo.repo
        echo enabled=1 >> /etc/yum.repos.d/localrepo.repo
        echo baseurl=file:///repo >> /etc/yum.repos.d/localrepo.repo
   - run:
      name: Checkout module for $CIRCLE_JOB
      command: ./getsource.sh
   - run:
      name: Installation test
      command: |
        cd /tmp/build
        lst=`basename *.spec .spec`.lst  # RPM list file
        ( cd /dist ; for i in `cat $lst | fgrep -v .src.rpm` ; do sudo yum install -y $i ; done )
   - run:
      name: Test prepare
      command: cd /tmp/build && ci-build testprep
   - run:
      name: Test
      command: cd /tmp/build && ci-build test
 
jobs:
# Ordinarily lines starting with # are comments but config preprocessing recognizes certain directives
# Config rebuilder uses lines between #template .. #end as a sort of template, currently:
# build: a template for a build task, smartmet-* are replaced with respective module
# test: a template for a test task, smartmet-* are replaced with respective module
# pre: starts a block for jobs which should be run before everything else(i.e. check config rebuilding, common workspace setup)
# post: starts a block for jobs which should be run after everything else(i.e. collect artifacts, setup repository)
# If you need multiple pre/post processing jobs(unlikely, you could just put in more steps), make several templates
#template pre
# These job(s) will be run before anything else in the workflow
  check:
    executor: fmi-executor
    steps:
     - checkout
     - run:
        name: Check that config.yml is current
        command: |
          circleci version || ( curl -fLSs https://circle.ci/cli | sudo bash )
          make -v >/dev/null || sudo yum install -y make
          sudo yum install -y perl-Data-Dumper || true
          make check
#end
#template build
  build-smartmet-library-newbase:
    executor: fmi-executor
    steps:
     - build-default
#end
#template test
  test-smartmet-library-newbase:
    executor: fmi-executor
    steps:
     - test-default
#end
#template post
  archive:
    executor: fmi-executor
    steps:
     - checkout
     - attach_workspace:
        at: /dist
     - run:
        name: Create repository
        command: |
          rm -f /dist/*.lst
          createrepo_c /dist
     - store_artifacts:
        path: /dist
#end

workflows:
  version: 2.1
  build-test-and-archive:
    jobs:
# Dependency tree will be completely rebuilt by config-rebuilder
# Template still needed for indentation lookup and placement
#template deptree
    - build-smartmet-library-newbase
#end
